1.
npx create-react-app style-components-playground

npm start

npm install --save styled-components

then import to the file you want to use
-- import styled from "styled-components";

const Heading = styled.h1`
  font-size: 10rem;    //back tick is use here
`;

and wrap it where you want to style
 <Heading>
     Edit <code>src/App.js</code> and save to reload.
</Heading>

4--

passing props in styled components

background: ${({ type }) => (type === "cancel" ? "tomato" : "indigo")};
//javascript works inside of styled components
//if props is cancel den color is tomato if not indigo (if two button is dre)

<Button>Save</Button>
<Button type="cancel">Cancel</Button>

5--

const color = "white"; //variable example
 color: ${color};

 nesting and parent relation--
 const AppWrapper = styled.div`
  header {
    background: teal;
    &:hover {
      background: red;
    }
  }
`;

 <AppWrapper>
        <header className="App-header">
          <img src={logo} className="App-logo" alt="logo" />
          <Heading>
            Edit <code>src/App.js</code> and save to reload.
          </Heading>
          <a
            className="App-link"
            href="https://reactjs.org"
            target="_blank"
            rel="noopener noreferrer"
          >
            Learn React
          </a>
        </header>
  </AppWrapper>

6--
//extending all the button property and adding new one
const CancelButton = styled(Button)`
  background: tomato;
`;

reference in styled components

const Fake = ({ className }) => (
  <div className={className}>
    <h2>I'm a fake component</h2>
  </div>
);

const DoubleFake = styled(Fake)`
  h2 {
    color: red;
  }
`;

 <DoubleFake />
  <Fake />

7-- media queries

const size = { //for media queries we need object method
  small: 400,
  med: 960,
  large: 1140
};

const above = Object.keys(size).reduce((acc, label) => {
  acc[label] = (...args) => css`
    @media (min-width: ${size[label] / 16}em)  //if u use em divide it by 16
      ${css(...args)}
    }
  `;
  return acc;
}, {});

const Heading = styled.h1`
  font-size: 2rem;
  ${above.med`
    color: blue;
  `}
`;

8--

// CSS Helper
// Needed for props in mixins(string bou ahile man ngailo, function,props ho hile mandi)
const fixedTop = css`
  position: fixed;
  top: ${({ top }) => top + "px"};
  left: 0;
`;

9--
global style -- prefer it in the root component

creat global.js file
import { createGlobalStyle } from 'styled-components';

import in App.js
//dont simpl use global style

10--
styled components organization
create two folder elements and utilities inside src

in App.js
import { Heading, Button, CancelButton } from './elements';
code alhom na hi index.js aki create jeh
export * from './Headings';
export * from './Buttons';

hitia akibol le a folder chan bou import thei
code lhom
